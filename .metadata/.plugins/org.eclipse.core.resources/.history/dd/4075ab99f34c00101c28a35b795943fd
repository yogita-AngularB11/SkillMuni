package test0905;

import java.time.Duration;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.ElementClickInterceptedException;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import io.github.bonigarcia.wdm.WebDriverManager;

public class TenthTestCase {
	public static void main(String[] args) {

		WebDriverManager.chromedriver().setup();
		ChromeOptions options = new ChromeOptions();
		options.addArguments("--incognito");
		WebDriver driver = new ChromeDriver(options);

		WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(20));
		JavascriptExecutor js = (JavascriptExecutor) driver;

		// Case 1: Always choose first option
		boolean case1 = true;

		// Case 2: Choose specific option per question (index starts from 1)
		int[] answers = { 3, 2, 4, 1, 1, 2, 3, 1, 4, 2 };

		try {
			driver.get("https://www.skillmuni.in/Skillmuni_Prod/login");
			driver.manage().window().maximize();
			System.out.println("Title => " + driver.getTitle());
			System.out.println("URL => " + driver.getCurrentUrl());

			// Login
			wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("userId"))).sendKeys("healthAppTest");
			driver.findElement(By.id("password")).sendKeys("healthAppTest");
			driver.findElement(By.xpath("//button[@class='login-btn']")).click();

			// Go to Knowledge Knook -> See All
			wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//a[@href='/Skillmuni_Prod/learning-zone']")))
					.click();
			System.out.println("Clicked Knowledge Knook -> See All");

			// Find all topic cards
			wait.until(ExpectedConditions
					.presenceOfElementLocated(By.xpath("//div[contains(@class,'play-card-content')]")));
			List<WebElement> cards = driver.findElements(By.xpath("//div[contains(@class,'play-card-content')]"));
			System.out.println("üìö Total topic cards found: " + cards.size());

			for (int i = 0; i < cards.size(); i++) {
				cards = driver.findElements(By.xpath("//div[contains(@class,'play-card-content')]"));
				if (i >= cards.size())
					continue;

				WebElement card = cards.get(i);
				System.out.println("‚û°Ô∏è Clicking on card #" + (i + 1));
				card.click();

				try {
					WebElement letsGoBtn = wait.until(ExpectedConditions
							.elementToBeClickable(By.xpath("//button[contains(text(),\"Let's Go\")]")));
					System.out.println("üìù Pre-assessment screen detected. Clicking 'Let's Go!'");
					letsGoBtn.click();

					// Wait for first question to appear
					wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//div[@class='question-text']")));
					List<WebElement> allQuestions = driver
							.findElements(By.xpath("//div[contains(@class,'question-card')]"));
					System.out.println("‚ùì Total questions found: " + allQuestions.size());

					for (int q = 1; q <= allQuestions.size(); q++) {
						try {
							int optionToSelect = case1 ? 1 : (q <= answers.length ? answers[q - 1] : 1);

							// Build dynamic XPath for the question
							String relativeXPath = "(//div[contains(@class,'question-card')])[" + q + "]//label["
									+ optionToSelect + "]/input";
							System.out.println("üëâ Trying XPath: " + relativeXPath);

							WebElement option = wait
									.until(ExpectedConditions.presenceOfElementLocated(By.xpath(relativeXPath)));

							// Scroll into view
							js.executeScript("arguments[0].scrollIntoView({block: 'center'});", option);

							// Wait until clickable
							wait.until(ExpectedConditions.elementToBeClickable(option));

							try {
								option.click();
							} catch (ElementClickInterceptedException e) {
								System.out.println("‚ö†Ô∏è Click intercepted, trying JS click");
								js.executeScript("arguments[0].click();", option);
							}

							System.out.println("‚úÖ Answered question #" + q + " with option " + optionToSelect);
							Thread.sleep(500);
						} catch (Exception ex) {
							System.out.println("‚ùå Could not answer question #" + q + " ‚Üí " + ex.getMessage());
						}
						// ‚úÖ Click "Continue" after answering all questions
						try {
							By continueBtnLocator = By.xpath("//button[@class='submit-btn']");
							wait.until(ExpectedConditions.elementToBeClickable(continueBtnLocator));
							WebElement continueBtn = driver.findElement(continueBtnLocator);
							js.executeScript("arguments[0].scrollIntoView({block: 'center'});", continueBtn);
							js.executeScript("arguments[0].click();", continueBtn); // safer click
							System.out.println("‚úÖ Clicked on 'Continue' button");
							Thread.sleep(1500);
						} catch (Exception e) {
							System.out.println("‚ùå Could not click 'Continue' ‚Üí " + e.getMessage());
						}
						// Wait for the "Your Current Skill Level" text
						WebElement skillLevelText = wait.until(ExpectedConditions.visibilityOfElementLocated(
								By.xpath("//*[contains(text(),'Your Current Skill Level')]")));

						// Get the entire page text or a specific element near the compass image
						String pageSource = driver.getPageSource();

						if (pageSource.contains("Beginner level")) {
							System.out.println("üìò User is at BEGINNER level");
							// Optional: perform beginner-specific flow
						} else if (pageSource.contains("Intermediate level")) {
							System.out.println("üìó User is at INTERMEDIATE level");
							// Optional: perform intermediate-specific flow
						} else if (pageSource.contains("Advanced level")) {
							System.out.println("üìó User is at Advanced level");
							// Optional: perform intermediate-specific flow
						} else {
							System.out.println("‚ùì Skill level not identified");
						}

						// Click "Start Stage" button (common to both)
//						WebElement startStageBtn = wait.until(ExpectedConditions
//								.elementToBeClickable(By.xpath("//button[contains(text(),'Start Stage')]")));
//						startStageBtn.click();

					}
				} catch (Exception e) {
					System.out.println("‚úÖ No pre-assessment found or already completed for this card.");
				}

				driver.navigate().back();
				Thread.sleep(1500); // Optional wait before next card
			}

		} catch (Exception e) {
			System.out.println("üö´ Error occurred: " + e.getMessage());
		} finally {
			driver.quit();
		}
	}
}
