package test0905;

import java.time.Duration;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.openqa.selenium.By;
import org.openqa.selenium.ElementClickInterceptedException;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import io.github.bonigarcia.wdm.WebDriverManager;

public class ThirteenTestCase  {
    public static void main(String[] args) {
        WebDriverManager.chromedriver().setup();
        ChromeOptions options = new ChromeOptions();
        options.addArguments("--incognito");
        WebDriver driver = new ChromeDriver(options);

        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(20));
        JavascriptExecutor js = (JavascriptExecutor) driver;

        int[] answers = {3, 2, 4, 1, 1, 2, 3, 1, 4, 2};

        try {
            driver.get("https://www.skillmuni.in/Skillmuni_Prod/login");
            driver.manage().window().maximize();
            System.out.println("Title => " + driver.getTitle());
            System.out.println("URL => " + driver.getCurrentUrl());

            wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("userId"))).sendKeys("healthAppTest");
            driver.findElement(By.id("password")).sendKeys("healthAppTest");
            driver.findElement(By.xpath("//button[@class='login-btn']")).click();

            wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//a[@href='/Skillmuni_Prod/learning-zone']"))).click();
            System.out.println("Clicked Knowledge Knook -> See All");

            wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//div[contains(@class,'play-card-content')]")));
            List<WebElement> categories = driver.findElements(By.xpath("//div[contains(@class,'play-card-content')]"));
            System.out.println("\uD83D\uDCDA Total categories found: " + categories.size());

            for (int i = 0; i < categories.size(); i++) {
                categories = driver.findElements(By.xpath("//div[contains(@class,'play-card-content')]"));
                if (i >= categories.size()) continue;

                WebElement category = categories.get(i);
                String categoryTitle = category.getText().trim();
                System.out.println("‚û°Ô∏è Clicking on category #" + (i + 1) + " - Title: " + categoryTitle);
                js.executeScript("arguments[0].scrollIntoView({block: 'center'});", category);
                category.click();

                try {
                    // Handle pre-assessment if Start Stage button not visible
                    List<WebElement> letsGoBtns = driver.findElements(By.xpath("//button[contains(text(),\"Let's Go\")]"));
                    if (!letsGoBtns.isEmpty()) {
                        System.out.println("üìù Pre-assessment detected. Starting...");
                        letsGoBtns.get(0).click();
                        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//div[@class='question-text']")));

                        List<WebElement> allQuestions = driver.findElements(By.xpath("//div[contains(@class,'question-card')]"));
                        System.out.println("‚ùì Total questions found: " + allQuestions.size());

                        for (int q = 1; q <= allQuestions.size(); q++) {
                            int optionToSelect = (q <= answers.length ? answers[q - 1] : 1);
                            String relativeXPath = "(//div[contains(@class,'question-card')])[" + q + "]//label[" + optionToSelect + "]/input";
                            WebElement option = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(relativeXPath)));

                            js.executeScript("arguments[0].scrollIntoView({block: 'center'});", option);
                            try {
                                option.click();
                            } catch (ElementClickInterceptedException e) {
                                js.executeScript("arguments[0].click();", option);
                            }
                            Thread.sleep(500);
                        }

                        WebElement continueBtn = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//button[@class='submit-btn']")));
                        js.executeScript("arguments[0].scrollIntoView({block: 'center'});", continueBtn);
                        js.executeScript("arguments[0].click();", continueBtn);
                        System.out.println("‚úÖ Clicked on 'Continue' after pre-assessment");
                    }

                    WebElement startStageBtn = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//button[@class='stage-btn']")));
                    js.executeScript("arguments[0].scrollIntoView({block: 'center'});", startStageBtn);
                    startStageBtn.click();
                    System.out.println("üöÄ Clicked on 'Start Stage'");

                    wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//div[contains(@class,'category-card')]")));
                    List<WebElement> subCategories = driver.findElements(By.xpath("//div[contains(@class,'category-card')]"));

                    Map<String, Integer> stageWiseCredits = new HashMap<>();
                    int totalBriefsSolved = 0, totalBriefs = 0, totalCredits = 0;

                    for (WebElement sub : subCategories) {
                        String stage = sub.findElement(By.xpath(".//div[contains(@class,'stage-tag')]"))
                                .getText().trim();
                        String quizText = sub.findElement(By.xpath(".//div[contains(@class,'brief-count')]"))
                                .getText().trim();
                        String creditText = sub.findElement(By.xpath(".//div[contains(@class,'credit-count')]"))
                                .getText().trim().replace("Credits:", "").trim();

                        int credits = creditText.isEmpty() ? 0 : Integer.parseInt(creditText);
                        int solved = 0, total = 0;
                        if (quizText.contains("/")) {
                            String[] parts = quizText.split("/");
                            solved = Integer.parseInt(parts[0].trim());
                            total = Integer.parseInt(parts[1].trim());
                        }

                        stageWiseCredits.put(stage, stageWiseCredits.getOrDefault(stage, 0) + credits);
                        totalBriefsSolved += solved;
                        totalBriefs += total;
                        totalCredits += credits;

                        System.out.println("üìò Stage: " + stage + ", Briefs: " + solved + "/" + total + ", Credits: " + credits);

                        if (stage.equalsIgnoreCase("Discover") && sub.getText().contains("Discover")) {
                            js.executeScript("arguments[0].scrollIntoView({block: 'center'});", sub);
                            sub.click();
                            Thread.sleep(1500);
                            driver.navigate().back();
                            wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//div[contains(@class,'category-card')]")));
                            subCategories = driver.findElements(By.xpath("//div[contains(@class,'category-card')]"));
                        }
                    }

                    WebElement topQuizzes = driver.findElement(By.xpath("//div[contains(@class,'top-bar')]//div[contains(text(),'Quizzes')]/following-sibling::div"));
                    WebElement topCredits = driver.findElement(By.xpath("//div[contains(@class,'top-bar')]//div[contains(text(),'Credits')]/following-sibling::div"));

                    System.out.println("üìä Total Briefs Solved: " + totalBriefsSolved + "/" + totalBriefs);
                    System.out.println("üí∞ Total Credits Summed: " + totalCredits);
                    System.out.println("üßÆ Top Summary Quizzes: " + topQuizzes.getText());
                    System.out.println("üí≥ Top Summary Credits: " + topCredits.getText());

                    if (topCredits.getText().equals(String.valueOf(totalCredits))) {
                        System.out.println("‚úÖ Credits match with top summary.");
                    } else {
                        System.out.println("‚ùå Credits mismatch!");
                    }

                    String[] quizParts = topQuizzes.getText().split("/");
                    int topSolved = Integer.parseInt(quizParts[0].trim());
                    int topTotal = Integer.parseInt(quizParts[1].trim());
                    if (topSolved == totalBriefsSolved && topTotal == totalBriefs) {
                        System.out.println("‚úÖ Quiz count matches with subcategory totals.");
                    } else {
                        System.out.println("‚ùå Quiz count mismatch!");
                    }

                } catch (Exception e) {
                    System.out.println("‚ùå Error inside category ‚Üí " + e.getMessage());
                }

                driver.navigate().back();
                Thread.sleep(2000);
            }

        } catch (Exception e) {
            System.out.println("‚ùå Error occurred: " + e.getMessage());
        } finally {
            driver.quit();
        }
    }
}
