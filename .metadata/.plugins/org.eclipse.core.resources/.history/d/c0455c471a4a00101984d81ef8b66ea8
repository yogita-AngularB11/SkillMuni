package test0905;

import java.time.Duration;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SeventhTestCase {
	public static void main(String[] args) {
		WebDriverManager.chromedriver().setup();
		ChromeOptions options = new ChromeOptions();
		options.addArguments("--incognito");
		WebDriver driver = new ChromeDriver(options);

		WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));

		try {
			driver.get("https://www.skillmuni.in/Skillmuni_Prod/login");
			driver.manage().window().maximize();
			System.out.println("Title => " + driver.getTitle());
			System.out.println("URL => " + driver.getCurrentUrl());

			// Login
			wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("userId"))).sendKeys("healthApp");
			driver.findElement(By.id("password")).sendKeys("healthApp");
			driver.findElement(By.xpath("//button[@class='login-btn']")).click();

			// Go to Knowledge Knook -> See All
			wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//a[@href='/Skillmuni_Prod/learning-zone']"))).click();
			System.out.println("Clicked Knowledge Knook -> See All");

			// Find all topic cards
			wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//div[contains(@class,'play-card-content')]")));
			List<WebElement> cards = driver.findElements(By.xpath("//div[contains(@class,'play-card-content')]"));
			System.out.println("üìö Total topic cards found: " + cards.size());

			for (int i = 0; i < cards.size(); i++) {
				cards = driver.findElements(By.xpath("//div[contains(@class,'play-card-content')]")); // Re-fetch to avoid stale elements
				if (i >= cards.size())
					continue;

				WebElement card = cards.get(i);
				System.out.println("‚û°Ô∏è Clicking on card #" + (i + 1));
				card.click();

				try {
					// Wait for Let's Go button and click
					WebElement letsGoBtn = wait.until(ExpectedConditions.elementToBeClickable(
							By.xpath("//button[contains(text(),\"Let's Go\")]")));
					System.out.println("üìù Pre-assessment screen detected. Clicking 'Let's Go!'");
					letsGoBtn.click();

					// Wait for question screen
					wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//div[@class='question-text']")));
					List<WebElement> questions = driver.findElements(By.xpath("//div[@class='question-text']"));
					System.out.println("‚ùì Total questions found: " + questions.size());

					int questionsToAnswer = Math.min(2, questions.size()); // limit to 2 answers

					for (int q = 0; q < questionsToAnswer; q++) {
						try {
							WebElement questionBlock = questions.get(q);
							WebElement firstOption = questionBlock.findElement(By.xpath(".//input[@type='radio']"));
							firstOption.click();
							System.out.println("‚úÖ Answered question #" + (q + 1));
							Thread.sleep(300); // optional pause
						} catch (Exception e) {
							System.out.println("‚ö†Ô∏è Could not answer question #" + (q + 1) + ": " + e.getMessage());
						}
					}

					// Click Back button
					System.out.println("üîô Clicking Back after answering " + questionsToAnswer + " question(s)");
					WebElement backBtn = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//img[@alt='Back Icon']")));
					backBtn.click();

					// Handle break modal if appears
					try {
						wait.until(ExpectedConditions.visibilityOfElementLocated(
								By.xpath("//h2[contains(text(),'Break Time? A Head‚Äôs Up')]")));
						WebElement yesBtn = driver.findElement(By.xpath("//button[text()='YES']"));
						System.out.println("‚ö†Ô∏è Break warning detected. Clicking 'YES' to exit.");
						yesBtn.click();
					} catch (Exception modalNotFound) {
						System.out.println("‚ùå Break warning modal did NOT appear.");
						driver.navigate().back();
					}

				} catch (Exception e) {
					System.out.println("‚úÖ No pre-assessment found or assessment already completed for card #" + (i + 1));
					driver.navigate().back();
				}

				Thread.sleep(2000); // wait before next card
			}

		} catch (Exception e) {
			System.out.println("üö´ Error occurred: " + e.getMessage());
		}

		// Post-assessment: detect Credits & Skill Level
		try {
			WebElement creditElement = driver.findElement(By.xpath("//div[contains(text(),'Credits') and contains(text(),'Earned')]"));
			String creditText = creditElement.getText();
			System.out.println("üéì Credits Earned: " + creditText);

			WebElement skillLevelElement = driver.findElement(
					By.xpath("//div[contains(@class, 'skillLevelText') or contains(text(),'You‚Äôre at the')]"));
			String skillLevelText = skillLevelElement.getText();

			if (skillLevelText.contains("Beginner")) {
				System.out.println("üî∞ Skill Level Detected: Beginner");
			} else if (skillLevelText.contains("Intermediate")) {
				System.out.println("üöÄ Skill Level Detected: Intermediate");
			} else if (skillLevelText.contains("Advanced")) {
				System.out.println("üåü Skill Level Detected: Advanced");
			} else {
				System.out.println("‚ùì Skill Level: Not clearly identified");
			}

			// Optionally click the "Start Stage" button
			WebElement startStageButton = driver.findElement(By.xpath("//button[contains(text(),'Start Stage')]"));
			startStageButton.click();
			System.out.println("‚ñ∂Ô∏è Start Stage button clicked.");

		} catch (Exception e) {
			System.out.println("‚ö†Ô∏è Error during skill level or credits detection: " + e.getMessage());
		}
	}
}
